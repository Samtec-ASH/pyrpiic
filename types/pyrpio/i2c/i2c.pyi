"""
This type stub file was generated by pyright.
"""

class I2CException(Exception):
    ...


class I2C:
    I2C_SLAVE = ...
    def __init__(self, path: str = ...):
        '''
        Create an i2c bus with 7-bit addressing

        Args:
            path (str, optional): path of i2c bus. Defaults to '/dev/i2c-1'.
        '''
        ...
    
    def open(self):
        '''
        Open the i2c bus
        '''
        ...
    
    def close(self):
        '''
        Close the i2c bus
        '''
        ...
    
    def set_address(self, address: int):
        '''
        Set the i2c bus address if it has changed

        Args:
            address (int): address of i2c device

        Raises:
            I2CException: Bus is not open
        '''
        ...
    
    def read(self, length: int = ...) -> bytes:
        '''
        Read amount of bytes back from i2c bus

        Args:
            length (int, optional): Number of bytes to read. Defaults to 1.

        Raises:
            I2CException: Bus is not open

        Returns:
            bytes: read from i2c bus
        '''
        ...
    
    def write(self, data: bytes):
        '''
        Write amount of bytes on i2c bus

        Args:
            data (bytes): bytes written on the bus

        Raises:
            I2CException: Bus is not open
        '''
        ...
    
    def read_write(self, data: bytes, length: int = ...) -> bytes:
        '''
        Perform read write operation to get information back from device on bus

        Args:
            data (bytes): command to send device
            length (int, optional): number of bytes to read back. Defaults to 1.

        Raises:
            I2CException: Bus is not open

        Returns:
            bytes: infromation read back from device on bus
        '''
        ...
    


